<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="0" failed="2" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-12T11:45:42 IDT" name="TestAll" finished-at="2022-06-12T11:45:48 IDT" duration-ms="5370">
    <groups>
      <group name="SystemSanityTests">
        <method signature="runningTests.TestCase1(java.lang.String,java.lang.String)[pri:1, instance:Test.runningTests@6aba2b86]" name="TestCase1" class="Test.runningTests"/>
        <method signature="runningTests.TestCase2()[pri:2, instance:Test.runningTests@6aba2b86]" name="TestCase2" class="Test.runningTests"/>
        <method signature="runningTests.TestCase3()[pri:3, instance:Test.runningTests@6aba2b86]" name="TestCase3" class="Test.runningTests"/>
        <method signature="runningTests.TestCase1(java.lang.String,java.lang.String)[pri:1, instance:Test.runningTests@4d5d943d]" name="TestCase1" class="Test.runningTests"/>
        <method signature="runningTests.TestCase2()[pri:2, instance:Test.runningTests@4d5d943d]" name="TestCase2" class="Test.runningTests"/>
        <method signature="runningTests.TestCase3()[pri:3, instance:Test.runningTests@4d5d943d]" name="TestCase3" class="Test.runningTests"/>
      </group> <!-- SystemSanityTests -->
    </groups>
    <test started-at="2022-06-12T11:45:42 IDT" name="chromeTest" finished-at="2022-06-12T11:45:47 IDT" duration-ms="4442">
      <class name="Test.runningTests">
        <test-method is-config="true" signature="beforeSystemSanityTests(java.lang.String,java.lang.String)[pri:0, instance:Test.runningTests@6aba2b86]" started-at="2022-06-12T11:45:42 IDT" name="beforeSystemSanityTests" finished-at="2022-06-12T11:45:46 IDT" duration-ms="3538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.tripadvisor.co.il]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSystemSanityTests -->
        <test-method signature="TestCase1(java.lang.String,java.lang.String)[pri:1, instance:Test.runningTests@6aba2b86]" started-at="2022-06-12T11:45:46 IDT" name="TestCase1" finished-at="2022-06-12T11:45:46 IDT" duration-ms="11" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C:\my files\TestCaseImages]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:\my files\testExcelFiles]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream
at Test.runningTests.TestCase1(runningTests.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.ClassNotFoundException: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase1 -->
        <test-method signature="TestCase2()[pri:2, instance:Test.runningTests@6aba2b86]" started-at="2022-06-12T11:45:46 IDT" name="TestCase2" finished-at="2022-06-12T11:45:46 IDT" depends-on-methods="Test.runningTests.TestCase1" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method runningTests.TestCase2()[pri:2, instance:Test.runningTests@6aba2b86] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method runningTests.TestCase2()[pri:2, instance:Test.runningTests@6aba2b86] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase2 -->
        <test-method signature="TestCase3()[pri:3, instance:Test.runningTests@6aba2b86]" started-at="2022-06-12T11:45:46 IDT" name="TestCase3" finished-at="2022-06-12T11:45:46 IDT" depends-on-methods="Test.runningTests.TestCase2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method runningTests.TestCase3()[pri:3, instance:Test.runningTests@6aba2b86] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method runningTests.TestCase3()[pri:3, instance:Test.runningTests@6aba2b86] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase3 -->
        <test-method is-config="true" signature="AfterSystemSanityTests(java.lang.String)[pri:0, instance:Test.runningTests@6aba2b86]" started-at="2022-06-12T11:45:46 IDT" name="AfterSystemSanityTests" finished-at="2022-06-12T11:45:47 IDT" duration-ms="855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSystemSanityTests -->
      </class> <!-- Test.runningTests -->
    </test> <!-- chromeTest -->
    <test started-at="2022-06-12T11:45:42 IDT" name="EdgeTest" finished-at="2022-06-12T11:45:48 IDT" duration-ms="5370">
      <class name="Test.runningTests">
        <test-method is-config="true" signature="beforeSystemSanityTests(java.lang.String,java.lang.String)[pri:0, instance:Test.runningTests@4d5d943d]" started-at="2022-06-12T11:45:42 IDT" name="beforeSystemSanityTests" finished-at="2022-06-12T11:45:47 IDT" duration-ms="4530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.tripadvisor.co.il]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSystemSanityTests -->
        <test-method signature="TestCase1(java.lang.String,java.lang.String)[pri:1, instance:Test.runningTests@4d5d943d]" started-at="2022-06-12T11:45:47 IDT" name="TestCase1" finished-at="2022-06-12T11:45:47 IDT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C:\my files\TestCaseImages]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:\my files\testExcelFiles]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream
at Test.runningTests.TestCase1(runningTests.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.ClassNotFoundException: org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase1 -->
        <test-method signature="TestCase2()[pri:2, instance:Test.runningTests@4d5d943d]" started-at="2022-06-12T11:45:47 IDT" name="TestCase2" finished-at="2022-06-12T11:45:47 IDT" depends-on-methods="Test.runningTests.TestCase1" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method runningTests.TestCase2()[pri:2, instance:Test.runningTests@4d5d943d] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method runningTests.TestCase2()[pri:2, instance:Test.runningTests@4d5d943d] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase2 -->
        <test-method signature="TestCase3()[pri:3, instance:Test.runningTests@4d5d943d]" started-at="2022-06-12T11:45:47 IDT" name="TestCase3" finished-at="2022-06-12T11:45:47 IDT" depends-on-methods="Test.runningTests.TestCase2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method runningTests.TestCase3()[pri:3, instance:Test.runningTests@4d5d943d] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method runningTests.TestCase3()[pri:3, instance:Test.runningTests@4d5d943d] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase3 -->
        <test-method is-config="true" signature="AfterSystemSanityTests(java.lang.String)[pri:0, instance:Test.runningTests@4d5d943d]" started-at="2022-06-12T11:45:47 IDT" name="AfterSystemSanityTests" finished-at="2022-06-12T11:45:48 IDT" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSystemSanityTests -->
      </class> <!-- Test.runningTests -->
    </test> <!-- EdgeTest -->
  </suite> <!-- TestAll -->
</testng-results>
